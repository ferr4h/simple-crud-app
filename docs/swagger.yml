openapi: 3.0.3
info:
  title: Simple CRUD App
  description: |-
    This is an example of how your specification could look like. Written manually
  version: 1.0.0
servers:
  - url: localhost:8080/api
tags:
  - name: games
    description: Everything about games
paths:
  /games:
    get:
      tags:
        - games
      summary: Find all games
      operationId: getGames
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Game'
    post:
      tags:
        - games
      summary: Add a new game
      operationId: createGame
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GameInput'
        required: true
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Game'
        '400':
          description: Invalid input
  /games/{gameId}:
    get:
      tags:
        - games
      summary: Find game by ID
      operationId: getGameById
      parameters:
        - name: gameId
          in: path
          description: ID of game to return
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Game'
        '400':
          description: Invalid ID supplied
        '404':
          description: Game not found
    put:
      tags:
        - games
      summary: Update existing game
      description: ''
      operationId: updateGame
      parameters:
        - name: gameId
          in: path
          description: ID of game that needs to be updated
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GameInput'
        required: true
      responses:
        '400':
          description: Invalid input
        '404':
          description: Game not found
    delete:
      tags:
        - games
      summary: Delete game
      operationId: deleteGame
      parameters:
        - name: gameId
          in: path
          description: Game id to delete
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '400':
          description: Invalid ID supplied
        '404':
          description: Game not found

components:
  schemas:
    Game:
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 1
        title:
          type: string
          example: Red Dead Redemption 2
        developer:
          type: string
          example: Rockstar Games
        publisher:
          type: string
          example: Rockstar Games
        genre:
          type: string
          example: Adventure
        publicationDate:
          type: string
          example: 2018-10-26
        rating:
          type: string
          example: 9.5
    GameInput:
      type: object
      properties:
        title:
          type: string
          example: Red Dead Redemption 2
        developer:
          type: string
          example: Rockstar Games
        publisher:
          type: string
          example: Rockstar Games
        genre:
          type: string
          example: Adventure
        publicationDate:
          type: string
          example: 2018-10-26
        rating:
          type: string
          example: 9.5